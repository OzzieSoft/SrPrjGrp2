@model OzzieSoftCareerTracker.Models.Skill

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Skill</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.SkillName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SkillName)
            @Html.ValidationMessageFor(model => model.SkillName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SkillType)
        </div>
        <div class="editor-field">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem {
                    Text = "Leadership",
                    Value = "Leadership"
                });
                listItems.Add(new SelectListItem {
                    Text = "Programming",
                    Value = "Programming",
                });
                listItems.Add(new SelectListItem {
                    Text = "Data Mining",
                    Value = "DataMining"
                });
            }
            @Html.DropDownListFor(model => model.SkillType, listItems, "---Skill Type---")
            @Html.ValidationMessageFor(model => model.SkillType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SkillDesc)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.SkillDesc)
            @Html.ValidationMessageFor(model => model.SkillDesc)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
