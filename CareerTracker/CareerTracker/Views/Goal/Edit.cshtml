@model CareerTracker.Models.Goal

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Goal</legend>


        @Html.HiddenFor(model => model.ID)
        <div class="inline-block">
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="inline-block">
            <div class="editor-label">
                @Html.LabelFor(model => model.DueDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DueDate, "{0:MM/dd/yyyy}", new { type = "date", placeholder = "MM/dd/yyyy" })
                @Html.ValidationMessageFor(model => model.DueDate)
            </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Categories)
        </div>
        <div class="editor-field">
            @foreach (var cat in ViewBag.Cats) {
                <div class="category-disp"><label title="@cat.Description"><input type="checkbox" name="" />&nbsp;&nbsp;@cat.Name</label></div>
            }
        </div>


        @Html.LabelFor(model => model.Steps)
        <div class="editor-label">
            <table>
                <tr>
                    <th class="name-header">
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th class="description-header">
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DueDate)
                    </th>
                    <th></th>
                </tr>

                @if (Model.Steps.Count > 0)
                {
                    foreach (var step in Model.Steps)
                    {
                    <tr>
                        <td>
                            @step.Name
                        </td>
                        <td>
                            @step.Description
                        </td>
                        <td>
                            @step.DueDate.ToShortDateString()
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "GoalStep", new { id = step.ID, goalID = Model.ID }, null) |
                            @Html.ActionLink("Delete", "Delete", "GoalStep", new { id = step.ID, returnto = Model.ID }, null)
                        </td>
                    </tr>
                    }
                }
                <tr>
                    <td></td><td></td><td></td>
                    <td>@Html.ActionLink("Add a step", "Create", "GoalStep", new { goalid = Model.ID }, null)</td>
                </tr>
            </table>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Private)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.Private)
            @Html.ValidationMessageFor(model => model.Private)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
